<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
TODO: Better upgrade mechanism - version check?

2011-10-29 0.1
  * initial release
2011-11-07 0.2
	* add "which" package (required for makepkg)
	* add go_build.sh
	* go_build.sh:
		* mounts system directories to $INSTALLDIR
		* chroots into $INSTALLDIR, running setup_chroot.sh
		* setup_chroot.sh:
			* runs ldconfig
			* sets $PS1 to indicate we are chrooted
		* upon exit from chroot, system directories are unmounted
		
2012-12-09 0.3
  * copy /etc/resolv.conf to $INSTALLDIR/etc/
    to enable DNS lookups inside the build environment
  * add missing Subversion dependencies
  * added packages:
    * apr
    * apr-util
    * cyrus-sasl
    * gperf
    * neon
    * sqlite

Files:
	/boot/config/plugins/buildenv-0.2-noarch-1maa.plg	    	# this file
	/boot/config/plugins/buildenv/buildenv.cfg			   		# plugin configuration file
	/boot/config/plugins/buildenv/packages.list					# list of packages to install to chroot
	/boot/config/plugins/buildenv/setup_chroot.sh               # prepares chroot environment

	/etc/rc.d/rc.buildenv										# plugin control script

	/usr/local/bin/go_build.sh/go_build.sh					    # sets up/tears down chroot
	
	/usr/local/emhttp/plugins/buildenv/event/unmounting_disks	# script to execute for emhttp event

	/var/log/plugins/buildenv									# created upon install success
	/var/run/buildenv/buildenv.pid							    # run-time pid file
-->
<!-- clean up previous install -->
<FILE Name="/tmp/buildenv-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[

rm -f /usr/local/bin/go_build.sh
rm -f /boot/config/plugins/buildenv/packages.list
rm -f /boot/config/plugins/buildenv/setup_chroot.sh
[ -f /etc/rc.d/rc.buildenv ] && /etc/rc.d/rc.buildenv stop
rm -f /etc/rc.d/rc.buildenv

rm -f -R /usr/local/emhttp/plugins/buildenv

rm /tmp/buildenv-cleanup
]]>
</INLINE>
</FILE>


<!-- plugin configuration -->
<FILE Name="/boot/config/plugins/buildenv/buildenv.cfg">
<INLINE>
<![CDATA[
# build enviromment configuration
SERVICE="disable"
INSTALLDIR="/usr/local/buildenv"
INSTALLED="no"
PACKAGEDIR="/boot/packages/buildenv"
]]>
</INLINE>
</FILE>

<!-- package list -->
<FILE Name="/boot/config/plugins/buildenv/packages.list">
<INLINE>
<![CDATA[
a/aaa_base*.t?z
a/aaa_elflibs*.t?z
a/aaa_terminfo*.t?z
a/acl*.t?z
a/attr*.t?z
a/bash*.t?z
a/bin*.t?z
a/bzip2*.t?z
a/coreutils*.t?z
a/cpio*.t?z
a/cxxlibs*.t?z
a/dbus*.t?z
a/devs*.t?z
a/e2fsprogs*.t?z
a/etc*.t?z
a/file*.t?z
a/findutils*.t?z
a/gawk*.t?z
a/gettext*.t?z
a/getty*.t?z
a/glibc-solibs*.t?z
a/grep*.t?z
a/gzip*.t?z
a/infozip*.t?z
a/kbd*.t?z
a/less*.t?z
a/module-init-tools*.t?z
a/openssl-solibs*.t?z
a/patch*.t?z
a/pkgtools*.t?z
a/procps*.t?z
a/reiserfsprogs*.t?z
a/sed*.t?z
a/shadow*.t?z
a/sysfsutils*.t?z
a/sysvinit*.t?z
a/tar*.t?z
a/udev*.t?z
a/util-linux-ng*.t?z
a/utempter*.t?z
a/which*.t?z
a/xz*.t?z

ap/diffutils*.t?z
ap/nano*.t?z
ap/sqlite*.t?z
ap/vim*.t?z

d/autoconf*.t?z
d/automake*.t?z
d/binutils*.t?z
d/cvs*.t?z
d/gcc*.t?z
d/gettext-tools*.t?z
d/git*.t?z
d/gperf-3.0.3-i486-1.txz
d/intltool*.t?z
d/libtool*.t?z
d/kernel-headers*.t?z
d/m4*.t?z
d/make*.t?z
d/mercurial*.t?z
d/nasm*.t?z
d/perl*.t?z
d/pkg-config*.t?z
d/python*.t?z
d/ruby*.t?z
d/subversion*.t?z
d/rcs*.t?z
d/swig*.t?z

l/ConsoleKit*.t?z
l/boost*.t?z
l/dbus*.t?z
l/expat*.t?z
l/fuse*.t?z
l/gdbm*.t?z
l/glib*.t?z
l/gmp*.t?z
l/jre*.t?z
l/libidn*.t?z
l/apr*.t?z
l/apr-util*.t?z
l/neon*.t?z
l/mm*.t?z
l/mpfr*.t?z
l/readline*.t?z
l/zlib*.t?z

n/curl*.t?z
n/cyrus-sasl*.t?z
n/gnutls*.t?z
n/libgcrypt*.t?z
n/net-tools*.t?z
n/network-scripts*.t?z
n/openssh*.t?z
n/openssl*.t?z
n/php*.t?z
n/wget*.t?z
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/buildenv/setup_chroot.sh">
<INLINE>
<![CDATA[
#!/bin/sh
ldconfig
source /etc/profile
export PS1='\u@[buildenv]:\w\$ '
bash
]]>
</INLINE>
</FILE>

<!-- control script -->
<FILE Name="/etc/rc.d/rc.buildenv" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable chroot build environment.

buildenv_start() {
  # no-op if not enabled
  if [ $SERVICE != "enable" ]; then
    echo "The build environment is not enabled."
    return
  fi
  # no-op if not installed
  if [ $INSTALLED != "yes" ]; then
    echo "The build environment has not been set up."
    echo "Run $0 enable /path/to/chroot to begin."
    return
  fi
  # no-op if already running
  if [ -r /var/run/buildenv/buildenv.pid ]; then
    echo "Chroot is currently populated. Aborting"
    return
  fi
  
  echo "Setting up chroot in:  $INSTALLDIR"
  touch /var/run/buildenv/buildenv.pid
  echo "Mounting system directories..."
  mount -t proc none ${INSTALLDIR}/proc
  mount -o bind /dev ${INSTALLDIR}/dev
  mount -o bind /dev/pts ${INSTALLDIR}/dev/pts
  mount -o bind /sys ${INSTALLDIR}/sys
  echo
}
												
buildenv_stop() {
  # no-op if not running
  if [ ! -r /var/run/buildenv/buildenv.pid ]; then
    return
  fi

  echo "Leaving build environment"
	rm /var/run/buildenv/buildenv.pid
	echo "Unmounting system directories"
	umount ${INSTALLDIR}/sys
	umount ${INSTALLDIR}/dev/pts
	umount ${INSTALLDIR}/dev
	umount ${INSTALLDIR}/proc
  echo
}

#buildenv_restart() {
#  buildenv_stop
#  sleep 1
#  buildenv_start
#}

write_config() {
  echo "# buildenv configuration" > /boot/config/plugins/buildenv/buildenv.cfg
  echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/buildenv/buildenv.cfg
  echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/buildenv/buildenv.cfg
  echo "INSTALLED=\"$INSTALLED\"" >> /boot/config/plugins/buildenv/buildenv.cfg
  echo "PACKAGEDIR=\"$PACKAGEDIR\"" >> /boot/config/plugins/buildenv/buildenv.cfg
}
install_chroot() {
  # parse out chroot location
  if [ -n "$1" ]; then
    INSTALLDIR="$1"
    write_config
  fi
  echo "Creating chroot location"
  mkdir -p "$INSTALLDIR"
  echo "Creating package repository"
  mkdir -p "$PACKAGEDIR"
  echo "Downloading packages"
  wget -rncH --cut-dirs=4 -B ftp://ftp.slackware.com/pub/slackware/slackware-13.1/slackware/ -i /boot/config/plugins/buildenv/packages.list -P ${PACKAGEDIR} 
  echo "Installing packages to chroot"
  for i in `ls -d ${PACKAGEDIR}/*`; do installpkg -root ${INSTALLDIR} $i/*; done
  # copy setup script to chroot
  cp /boot/config/plugins/buildenv/setup_chroot.sh ${INSTALLDIR}/bin
  chmod a+x ${INSTALLDIR}/bin/setup_chroot.sh
  # copy /etc/resolv.conf to chroot
  cp /etc/resolv.conf ${INSTALLDIR}/etc
  # create buildenv-writable directory for pid file
  if [ ! -e /var/run/buildenv ]; then
    mkdir /var/run/buildenv
  fi
  #set status to installed
  INSTALLED="yes"
  write_config
}
buildenv_enable() {
  # if not installed yet, do that
  if [ "$INSTALLED" != "yes" ]; then
    install_chroot "$1"
  fi
  # if not already enabled, enable it
  if [ "$SERVICE" != "enable" ]; then
    SERVICE=enable
    write_config
  fi
}
												
buildenv_disable() {
  buildenv_stop
  SERVICE=disable
  write_config
}

# read our configuration
source /boot/config/plugins/buildenv/buildenv.cfg

case "$1" in
'start')
  buildenv_start
  ;;
'stop')
  buildenv_stop
  ;;
'restart')
  buildenv_restart
  ;;
'enable')
  buildenv_enable $2
  ;;
'disable')
  buildenv_disable
  ;;
*)
  echo "usage $0 start|stop|restart|enable|disable"
esac

]]>
</INLINE>
</FILE>

<FILE Name="/tmp/upgrade-buildenv" Run="/bin/bash">
<INLINE>
<![CDATA[
source /boot/config/plugins/buildenv/buildenv.cfg
if [ "$INSTALLED" = "yes" -a ! -e ${INSTALLDIR}/bin/which ]; then
    wget -rncH --cut-dirs=4  -P ${PACKAGEDIR} ftp://ftp.slackware.com/pub/slackware/slackware-13.1/slackware/a/which*.txz
    installpkg --root $INSTALLDIR ${PACKAGEDIR}/a/which*.txz
fi
cp -f /boot/config/plugins/buildenv/setup_chroot.sh ${INSTALLDIR}/bin
chmod a+x ${INSTALLDIR}/bin/setup_chroot.sh

rm -f /tmp/upgrade-buildenv
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/bin/go_build.sh" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
source /boot/config/plugins/buildenv/buildenv.cfg
/etc/rc.d/rc.buildenv start
chroot ${INSTALLDIR} /bin/setup_chroot.sh
/etc/rc.d/rc.buildenv stop
]]>
</INLINE>
</FILE>

<!-- 
The page file defines which menu page the plugin will appear on.
-->
<!--FILE Name="/usr/local/emhttp/plugins/buildenv/buildenv.page">
<INLINE>
<![CDATA[
Menu="UserApps"
Icon="buildenv.png"
Version="0.1"
Author="Draug3n"
Type="php"
]]>
</INLINE>
</FILE-->

<!--FILE Name="/usr/local/emhttp/plugins/buildenv/buildenv.png">
<LOCAL>/boot/config/plugins/buildenv/buildenv.png</LOCAL>
</FILE-->

<!-- WebGui configuration page -->
<!--FILE Name="/usr/local/emhttp/plugins/buildenv/buildenv.php">
<INLINE>
<![CDATA[
<?PHP
$build_cfg = parse_ini_file( "/boot/config/plugins/buildenv/buildenv.cfg");
$build_running = file_exists( "/var/run/buildenv/buildenv.pid") ? "yes" : "no";
?>

   <form name="buildenv_settings" method="POST" action="/update.htm" target="progressFrame">
      <input type="hidden" name="cmd" value="/etc/rc.d/rc.buildenv">
      <table class="settings">
         <tr>
         <td>Enable buildenv:</td>
         <td><select name="arg1" size="1"  onChange="checkINSTALLDIR(this.form);">
            <?=mk_option($build_cfg['SERVICE'], "disable", "No");?>
            <?=mk_option($build_cfg['SERVICE'], "enable", "Yes");?>
            </select></td>
         </tr>
         <tr>
         <td>Install directory:</td>
         <td><input type="text" name="arg2" maxlength="40" value="<?=$build_cfg['INSTALLDIR'];?>"></td>
         </tr>
         <tr>
         <td></td>
         <td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</b$
         </tr>
      </table>
   </form>
<? if ($build_running=="yes"): ?>
     <hr>
     <p class=ContentTitle>The chroot build environment is set up in <code><?=$build_cfg['INSTALLDIR'];?></code></p>
<? endif; ?>

<script type="text/javascript">
function checkINSTALLDIR(form)
{
   if ("<?=$build_running;?>" == "yes") {
      form.arg2.disabled = true;
   }
   else {
      form.arg2.disabled = (form.arg1.value == "disable");
   }
}
checkINSTALLDIR(document.buildenv_settings);
</script>
]]>
</INLINE>
</FILE-->

<!-- event handlers-->


<FILE Name="/usr/local/emhttp/plugins/buildenv/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.buildenv stop
]]>
</INLINE>
</FILE>

<!-- install success marker -->
<FILE Name="/var/log/plugins/buildenv">
<INLINE>
<![CDATA[
A chroot build enviroment, to allow for persistent installation outside the main
UnRAID install.
]]>
</INLINE>
</FILE>

</PLUGIN>
